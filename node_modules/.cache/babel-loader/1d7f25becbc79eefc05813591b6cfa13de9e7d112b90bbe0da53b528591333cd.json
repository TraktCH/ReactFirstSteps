{"ast":null,"code":"var _jsxFileName = \"/home/adseki/Documents/React/tutorial-folder/src/form/Form.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  _s();\n  var _errors$fullName;\n  const schema = yup.object().shape({\n    fullName: yup.string().required(\"Your full name is a required field\"),\n    email: yup.string().email().required(\"Email is a required field\"),\n    age: yup.number().positive().integer().min(18).required(\"Age is a required field\"),\n    password: yup.string().min(4).max(20).required(\"Password is a required field\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]).required()\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Full Name...\",\n      ...register(\"fullName\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), (_errors$fullName = errors.fullName) === null || _errors$fullName === void 0 ? void 0 : _errors$fullName.message, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email...\",\n      ...register(\"email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Age...\",\n      ...register(\"age\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password...\",\n      ...register(\"password\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password...\",\n      ...register(\"confirmPassword\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n};\n_s(Form, \"/oBMtqmtoYsOiamXTu8j9i132fA=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useForm","yup","yupResolver","jsxDEV","_jsxDEV","Form","_s","_errors$fullName","schema","object","shape","fullName","string","required","email","age","number","positive","integer","min","password","max","confirmPassword","oneOf","ref","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","message","value","_c","$RefreshReg$"],"sources":["/home/adseki/Documents/React/tutorial-folder/src/form/Form.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nexport const Form = () => {\n\tconst schema = yup.object().shape({\n\t\tfullName: yup.string().required(\"Your full name is a required field\"),\n\t\temail: yup.string().email().required(\"Email is a required field\"),\n\t\tage: yup\n\t\t\t.number()\n\t\t\t.positive()\n\t\t\t.integer()\n\t\t\t.min(18)\n\t\t\t.required(\"Age is a required field\"),\n\t\tpassword: yup\n\t\t\t.string()\n\t\t\t.min(4)\n\t\t\t.max(20)\n\t\t\t.required(\"Password is a required field\"),\n\t\tconfirmPassword: yup\n\t\t\t.string()\n\t\t\t.oneOf([yup.ref(\"password\"), null])\n\t\t\t.required(),\n\t});\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm({\n\t\tresolver: yupResolver(schema),\n\t});\n\n\tconst onSubmit = (data) => {\n\t\tconsole.log(data);\n\t};\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<input type=\"text\" placeholder=\"Full Name...\" {...register(\"fullName\")} />\n\t\t\t{errors.fullName?.message}\n\t\t\t<input type=\"text\" placeholder=\"Email...\" {...register(\"email\")} />\n\t\t\t<input type=\"number\" placeholder=\"Age...\" {...register(\"age\")} />\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Password...\"\n\t\t\t\t{...register(\"password\")}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Confirm Password...\"\n\t\t\t\t{...register(\"confirmPassword\")}\n\t\t\t/>\n\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t</form>\n\t);\n};\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EACzB,MAAMC,MAAM,GAAGP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IACjCC,QAAQ,EAAEV,GAAG,CAACW,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,oCAAoC,CAAC;IACrEC,KAAK,EAAEb,GAAG,CAACW,MAAM,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC,CAACD,QAAQ,CAAC,2BAA2B,CAAC;IACjEE,GAAG,EAAEd,GAAG,CACNe,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,CAAC,CACVC,OAAO,CAAC,CAAC,CACTC,GAAG,CAAC,EAAE,CAAC,CACPN,QAAQ,CAAC,yBAAyB,CAAC;IACrCO,QAAQ,EAAEnB,GAAG,CACXW,MAAM,CAAC,CAAC,CACRO,GAAG,CAAC,CAAC,CAAC,CACNE,GAAG,CAAC,EAAE,CAAC,CACPR,QAAQ,CAAC,8BAA8B,CAAC;IAC1CS,eAAe,EAAErB,GAAG,CAClBW,MAAM,CAAC,CAAC,CACRW,KAAK,CAAC,CAACtB,GAAG,CAACuB,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,CAClCX,QAAQ,CAAC;EACZ,CAAC,CAAC;EAEF,MAAM;IACLY,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACrB,CAAC,GAAG5B,OAAO,CAAC;IACX6B,QAAQ,EAAE3B,WAAW,CAACM,MAAM;EAC7B,CAAC,CAAC;EAEF,MAAMsB,QAAQ,GAAIC,IAAI,IAAK;IAC1BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAClB,CAAC;EACD,oBACC3B,OAAA;IAAM0B,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;IAAAI,QAAA,gBACtC9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,cAAc;MAAA,GAAKX,QAAQ,CAAC,UAAU;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAAjC,gBAAA,GACzEqB,MAAM,CAACjB,QAAQ,cAAAJ,gBAAA,uBAAfA,gBAAA,CAAiBkC,OAAO,eACzBrC,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAAA,GAAKX,QAAQ,CAAC,OAAO;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnEpC,OAAA;MAAO+B,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,QAAQ;MAAA,GAAKX,QAAQ,CAAC,KAAK;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjEpC,OAAA;MACC+B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,aAAa;MAAA,GACrBX,QAAQ,CAAC,UAAU;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpC,OAAA;MACC+B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,qBAAqB;MAAA,GAC7BX,QAAQ,CAAC,iBAAiB;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFpC,OAAA;MAAO+B,IAAI,EAAC,QAAQ;MAACO,KAAK,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAET,CAAC;AAAClC,EAAA,CAnDWD,IAAI;EAAA,QAyBZL,OAAO;AAAA;AAAA2C,EAAA,GAzBCtC,IAAI;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}